<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- [1] DAtaSource 빈 선언 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin://@127.0.0.1:1521:xe" />
		<property name="username" value="hr" />
		<property name="password" value="a1234" />
	</bean>

	<!-- [2] SqlSessionFactoryBean 빈 선언 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="mapperLocations"> <list> <value>classpath:config/boardMapper.xml</value> 
			</list> </property> -->

		<property name="configLocation" value="classpath:config/configuration.xml" />

	</bean>

	<!-- [3] SqlSessionTemplate 빈 선언 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- Spring Jdbc나 Mybatis를 이용해서 DB연동을 처리하는 경우 DataSourceTransactionManager이 
		트랜잭션 관리자로 사용된다. -->

	<!-- [4] TransactionManager 빈 선언 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- [5] 선언적 트랜잭션(tx:advice) 선언 -->
	<!-- 1) BoardServiceImp 메소드에 트랜잭션 어노테이션 설정 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->
	<!-- 2)AOP를 이용한 트랜잭션 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Process" rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>
	<!-- [6] 트랜잭션 설정 -->
	<!-- 1) BoardServiceImp 메소드에 트랜잭션 어노테이션 설정 -->
	<!-- 2)AOP를 이용한 트랜잭션 설정 -->
	<aop:config>
		<aop:pointcut expression="execution(* service.BoardServiceImp.*Process(..))"
			id="aa" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="aa" />
	</aop:config>

	<!-- [7] DAO 빈 선언 -->
	<bean id="dao" class="dao.BoardDaoImp">
		<property name="sqlSession" ref="sqlSession" />
	</bean>

	<!-- [8] Service 빈 선언 -->
	<bean id="service" class="service.BoardServiceImp">
		<property name="dao" ref="dao" />
	</bean>

	<!-- 파일 업로드 시작 -->
	<!-- 첨부 파일의 임시 기억장치 경로 설정 -->
	<bean id="uploadDirResource" class="org.springframework.core.io.FileSystemResource">
		<constructor-arg value="./src/main/webapp/files/" />
	</bean>

	<!-- 첨부파일을 임시 기억저장소에 저장한다. -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="uploadTempDir" ref="uploadDirResource" />
		<property name="maxUploadSize" value="1000000000" />
	</bean>

	<!-- [9] Controller 빈 선언 -->
	<bean class="controller.BoardController">
		<property name="service" ref="service"></property>
	</bean>

	<!-- 다운로드 뷰 빈 선언 -->
	<!-- 보드 컨트롤러에서 setViewName()안의 인자에 다음 빈의 id값을 일치시켜야 한다. -->
	<bean id="download" class="view.BoardDownLoadView">
		<property name="dao" ref="dao" />
	</bean>

	<bean id="jsonView"
		class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />

	<!-- [10] View 빈 선언 -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="1" />
	</bean>

	<!-- InternalResourceViewResolver는 항상 마지막에 위치 해야 한다. -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>

</beans>
